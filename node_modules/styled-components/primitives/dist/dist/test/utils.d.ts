/// <reference types="react" />
export declare const seedNextClassnames: (names: string[]) => string[];
export declare const resetStyled: (isServer?: boolean) => (<Target extends import("../types").WebTarget>(tag: Target) => {
    <Props = unknown, Statics = unknown>(initialStyles: import("../types").Styles<Props>, ...interpolations: import("../types").Interpolation<Props>[]): import("../types").IStyledComponent<Target, Props> & Statics;
    attrs(attrs: import("../types").Attrs<unknown>): any;
    withConfig(config: import("../types").StyledOptions<unknown>): any;
}) & {
    a: import("../constructors/constructWithOptions").WebStyled<"a", import("react").DetailedHTMLProps<import("react").AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, unknown>;
    abbr: import("../constructors/constructWithOptions").WebStyled<"abbr", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    address: import("../constructors/constructWithOptions").WebStyled<"address", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    area: import("../constructors/constructWithOptions").WebStyled<"area", import("react").DetailedHTMLProps<import("react").AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>, unknown>;
    article: import("../constructors/constructWithOptions").WebStyled<"article", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    aside: import("../constructors/constructWithOptions").WebStyled<"aside", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    audio: import("../constructors/constructWithOptions").WebStyled<"audio", import("react").DetailedHTMLProps<import("react").AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>, unknown>;
    b: import("../constructors/constructWithOptions").WebStyled<"b", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    base: import("../constructors/constructWithOptions").WebStyled<"base", import("react").DetailedHTMLProps<import("react").BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>, unknown>;
    bdi: import("../constructors/constructWithOptions").WebStyled<"bdi", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    bdo: import("../constructors/constructWithOptions").WebStyled<"bdo", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    big: import("../constructors/constructWithOptions").WebStyled<"big", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    blockquote: import("../constructors/constructWithOptions").WebStyled<"blockquote", import("react").DetailedHTMLProps<import("react").BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    body: import("../constructors/constructWithOptions").WebStyled<"body", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>, unknown>;
    br: import("../constructors/constructWithOptions").WebStyled<"br", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLBRElement>, HTMLBRElement>, unknown>;
    button: import("../constructors/constructWithOptions").WebStyled<"button", import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, unknown>;
    canvas: import("../constructors/constructWithOptions").WebStyled<"canvas", import("react").DetailedHTMLProps<import("react").CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>, unknown>;
    caption: import("../constructors/constructWithOptions").WebStyled<"caption", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    cite: import("../constructors/constructWithOptions").WebStyled<"cite", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    code: import("../constructors/constructWithOptions").WebStyled<"code", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    col: import("../constructors/constructWithOptions").WebStyled<"col", import("react").DetailedHTMLProps<import("react").ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>, unknown>;
    colgroup: import("../constructors/constructWithOptions").WebStyled<"colgroup", import("react").DetailedHTMLProps<import("react").Colgro